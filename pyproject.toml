# CapitolScope - Congressional Trading Transparency Platform
# uv pip install -e .
# uv pip install -e .[dev]

[build-system]
requires = ["setuptools>=64.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "capitolscope"
version = "0.1.0"
description = "Congressional trading transparency and analysis platform"
authors = [{name = "CapitolScope Team"}]
readme = "README.md"
license = "MIT"
requires-python = ">=3.11"
keywords = ["congressional-trading", "stocks", "transparency", "finance"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    # Core Framework
    "fastapi[standard]>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "gunicorn>=21.2.0",
    "python-dotenv>=1.0.0",
    
    # Database & ORM
    "sqlalchemy[asyncio]>=2.0.23",
    "alembic>=1.13.0", 
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.7",
    
    # Configuration & Validation
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "pydantic[email]>=2.5.0",
    
    # Authentication & Security  
    "python-jose[cryptography]>=3.3.0",
    "python-multipart>=0.0.6",
    "passlib[bcrypt]>=1.7.0",
    "bcrypt>=4.1.0",
    "PyJWT>=2.8.0",
    "cryptography>=41.0.0",
    "itsdangerous>=2.1.0",
    
    # Supabase Integration
    "supabase>=2.0.0",
    
    # Financial Data APIs
    "yfinance>=0.2.18",
    "alpha-vantage>=2.3.1",
    "requests>=2.31.0",
    "httpx>=0.25.0",
    "aiohttp>=3.9.0",
    
    # Data Processing
    "pandas>=2.1.0",
    "numpy>=1.25.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "pdfplumber>=0.9.0",
    
    # Logging & Monitoring
    "structlog>=23.2.0",
    "prometheus-client>=0.19.0",
    "sentry-sdk[fastapi]>=1.40.0",
    
    # Task Scheduling
    "apscheduler>=3.10.4",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "nest_asyncio>=1.6.0",
    
    # Email & Notifications
    "sendgrid>=6.10.0",
    "jinja2>=3.1.0",
    
    # Payment Processing  
    "stripe>=7.0.0",
    
    # Rate Limiting
    "slowapi>=0.1.9",
    
    # Utilities
    "click>=8.1.0",
    "tqdm>=4.66.0",
    "tenacity>=8.2.0",
    "python-dateutil>=2.8.0",
    "pytz>=2023.3",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0", 
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "factory-boy>=3.3.0",
    "httpx>=0.25.0",  # For testing API endpoints
    "coverage>=7.3.0",
    
    # Code Quality
    "black>=23.10.0",
    "isort>=5.12.0", 
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "bandit>=1.7.5",  # Security linting
    
    # Development Tools
    "ipython>=8.17.0",
    "ipdb>=0.13.13",
    "jupyter>=1.0.0",
    "rich>=13.7.0",  # Better terminal output
    
    # Documentation
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.4.0",
    
    # Performance Profiling
    "py-spy>=0.3.14",
    "memory-profiler>=0.61.0",
]

jupyter = [
    "jupyter>=1.0.0",
    "ipykernel>=6.26.0",
    "matplotlib>=3.8.0",
    "seaborn>=0.13.0",
    "plotly>=5.17.0",
]

production = [
    "gunicorn>=21.2.0",
    "psutil>=5.9.0",
    "setproctitle>=1.3.3",
]

[tool.setuptools]
packages = ["src"]

[tool.setuptools.package-dir]
"" = "app"

[project.scripts]
capitolscope = "src.main:cli"

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration  
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app"]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["app/src"]
omit = [
    "*/tests/*",
    "*/migrations/*", 
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
] 