"""Add trade alert notification tables with all UUID FK types corrected

Revision ID: f095fc199c74
Revises: 842029b32a9b
Create Date: 2025-08-17 23:25:53.582089

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f095fc199c74'
down_revision = '842029b32a9b'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notification_analytics',
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('period_type', sa.String(length=20), nullable=True),
    sa.Column('total_sent', sa.Integer(), nullable=True),
    sa.Column('total_delivered', sa.Integer(), nullable=True),
    sa.Column('total_failed', sa.Integer(), nullable=True),
    sa.Column('total_opened', sa.Integer(), nullable=True),
    sa.Column('total_clicked', sa.Integer(), nullable=True),
    sa.Column('delivery_rate', sa.Integer(), nullable=True),
    sa.Column('open_rate', sa.Integer(), nullable=True),
    sa.Column('click_rate', sa.Integer(), nullable=True),
    sa.Column('email_sent', sa.Integer(), nullable=True),
    sa.Column('push_sent', sa.Integer(), nullable=True),
    sa.Column('sms_sent', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notification_templates',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('template_type', sa.String(length=50), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=True),
    sa.Column('html_content', sa.Text(), nullable=True),
    sa.Column('text_content', sa.Text(), nullable=True),
    sa.Column('variables', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('version', sa.String(length=20), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('newsletter_subscriptions',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('newsletter_type', sa.String(length=50), nullable=True),
    sa.Column('frequency', sa.String(length=20), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('unsubscribed_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notification_subscriptions',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('email_enabled', sa.Boolean(), nullable=True),
    sa.Column('push_enabled', sa.Boolean(), nullable=True),
    sa.Column('sms_enabled', sa.Boolean(), nullable=True),
    sa.Column('trade_alerts', sa.Boolean(), nullable=True),
    sa.Column('portfolio_updates', sa.Boolean(), nullable=True),
    sa.Column('market_alerts', sa.Boolean(), nullable=True),
    sa.Column('newsletter', sa.Boolean(), nullable=True),
    sa.Column('email_frequency', sa.String(length=20), nullable=True),
    sa.Column('alert_threshold', sa.Integer(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('password_reset_tokens',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('token_hash', sa.String(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_used', sa.Boolean(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('password_reset_tokens', schema=None) as batch_op:
        batch_op.create_index('ix_password_reset_tokens_token_hash', ['token_hash'], unique=False)
        batch_op.create_index('ix_password_reset_tokens_user_expires', ['user_id', 'expires_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_password_reset_tokens_user_id'), ['user_id'], unique=False)

    op.create_table('portfolios',
    sa.Column('member_id', sa.UUID(), nullable=False),
    sa.Column('portfolio_type', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('total_value', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('total_cost_basis', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('total_unrealized_gain', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('total_realized_gain', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('ytd_return', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('total_return', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('sharpe_ratio', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('max_drawdown', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('beta', sa.Numeric(precision=6, scale=3), nullable=True),
    sa.Column('volatility', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.Column('last_calculated', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['member_id'], ['congress_members.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('member_id', 'portfolio_type', name='uq_member_portfolio_type')
    )
    with op.batch_alter_table('portfolios', schema=None) as batch_op:
        batch_op.create_index('idx_portfolios_active', ['is_active'], unique=False)
        batch_op.create_index('idx_portfolios_member_id', ['member_id'], unique=False)
        batch_op.create_index('idx_portfolios_type', ['portfolio_type'], unique=False)

    op.create_table('trade_alert_rules',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('alert_type', sa.String(length=30), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=True),
    sa.Column('target_symbol', sa.String(length=10), nullable=True),
    sa.Column('target_name', sa.String(length=100), nullable=True),
    sa.Column('threshold_value', sa.BigInteger(), nullable=True),
    sa.Column('conditions', sa.JSON(), nullable=True),
    sa.Column('notification_channels', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('trade_alert_rules', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_trade_alert_rules_alert_type'), ['alert_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_trade_alert_rules_is_active'), ['is_active'], unique=False)
        batch_op.create_index(batch_op.f('ix_trade_alert_rules_target_id'), ['target_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_trade_alert_rules_target_symbol'), ['target_symbol'], unique=False)
        batch_op.create_index(batch_op.f('ix_trade_alert_rules_user_id'), ['user_id'], unique=False)

    op.create_table('notification_alerts',
    sa.Column('subscription_id', sa.UUID(), nullable=False),
    sa.Column('alert_type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('priority', sa.String(length=20), nullable=True),
    sa.Column('email_sent', sa.Boolean(), nullable=True),
    sa.Column('push_sent', sa.Boolean(), nullable=True),
    sa.Column('sms_sent', sa.Boolean(), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('read_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['notification_subscriptions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('portfolio_holdings',
    sa.Column('portfolio_id', sa.UUID(), nullable=False),
    sa.Column('security_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=15, scale=6), nullable=False),
    sa.Column('cost_basis', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('average_cost', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('current_price', sa.Numeric(precision=10, scale=4), nullable=True),
    sa.Column('current_value', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('unrealized_gain', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('unrealized_gain_percent', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('first_acquired', sa.Date(), nullable=False),
    sa.Column('last_updated', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('wash_sale_disallowed', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('short_term_gain', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('long_term_gain', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('cost_basis >= 0', name='chk_holdings_cost_basis_positive'),
    sa.CheckConstraint('quantity >= 0', name='chk_holdings_quantity_positive'),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], ),
    sa.ForeignKeyConstraint(['security_id'], ['securities.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('portfolio_id', 'security_id', name='uq_portfolio_security')
    )
    with op.batch_alter_table('portfolio_holdings', schema=None) as batch_op:
        batch_op.create_index('idx_holdings_active', ['is_active'], unique=False)
        batch_op.create_index('idx_holdings_first_acquired', ['first_acquired'], unique=False)
        batch_op.create_index('idx_holdings_portfolio_id', ['portfolio_id'], unique=False)
        batch_op.create_index('idx_holdings_security_id', ['security_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_portfolio_holdings_portfolio_id'), ['portfolio_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_portfolio_holdings_security_id'), ['security_id'], unique=False)

    op.create_table('portfolio_performance',
    sa.Column('portfolio_id', sa.UUID(), nullable=False),
    sa.Column('performance_date', sa.Date(), nullable=False),
    sa.Column('period_type', sa.String(length=20), nullable=False),
    sa.Column('total_value', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('total_cost_basis', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('cash_value', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('total_return', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('total_return_percent', sa.Numeric(precision=8, scale=4), nullable=False),
    sa.Column('daily_return', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('sp500_return', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('alpha', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('beta', sa.Numeric(precision=6, scale=3), nullable=True),
    sa.Column('volatility', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('sharpe_ratio', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('max_drawdown', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('number_of_holdings', sa.Integer(), nullable=False),
    sa.Column('largest_holding_percent', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('sector_concentration', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('portfolio_id', 'performance_date', 'period_type', name='uq_portfolio_performance_date')
    )
    with op.batch_alter_table('portfolio_performance', schema=None) as batch_op:
        batch_op.create_index('idx_performance_date', ['performance_date'], unique=False)
        batch_op.create_index('idx_performance_period_type', ['period_type'], unique=False)
        batch_op.create_index('idx_performance_portfolio_date', ['portfolio_id', 'performance_date'], unique=False)
        batch_op.create_index('idx_performance_portfolio_id', ['portfolio_id'], unique=False)

    op.create_table('portfolio_snapshots',
    sa.Column('portfolio_id', sa.UUID(), nullable=False),
    sa.Column('snapshot_date', sa.DateTime(), nullable=False),
    sa.Column('snapshot_type', sa.String(length=50), nullable=False),
    sa.Column('trigger_event', sa.String(length=100), nullable=True),
    sa.Column('total_value', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('total_cost_basis', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('cash_balance', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('number_of_positions', sa.Integer(), nullable=False),
    sa.Column('total_return', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('total_return_percent', sa.Numeric(precision=8, scale=4), nullable=False),
    sa.Column('ytd_return_percent', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('portfolio_beta', sa.Numeric(precision=6, scale=3), nullable=True),
    sa.Column('portfolio_volatility', sa.Numeric(precision=8, scale=4), nullable=True),
    sa.Column('largest_position_percent', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('technology_percent', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('healthcare_percent', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('financial_percent', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('energy_percent', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('other_percent', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('data_version', sa.String(length=20), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['portfolio_id'], ['portfolios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('portfolio_snapshots', schema=None) as batch_op:
        batch_op.create_index('idx_snapshots_date', ['snapshot_date'], unique=False)
        batch_op.create_index('idx_snapshots_portfolio_id', ['portfolio_id'], unique=False)
        batch_op.create_index('idx_snapshots_type', ['snapshot_type'], unique=False)

    op.create_table('notification_deliveries',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('trade_id', sa.UUID(), nullable=False),
    sa.Column('alert_rule_id', sa.UUID(), nullable=False),
    sa.Column('delivery_status', sa.String(length=20), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['alert_rule_id'], ['trade_alert_rules.id'], ),
    sa.ForeignKeyConstraint(['trade_id'], ['congressional_trades.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notification_deliveries', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notification_deliveries_alert_rule_id'), ['alert_rule_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_deliveries_trade_id'), ['trade_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_notification_deliveries_user_id'), ['user_id'], unique=False)

    op.create_table('notification_delivery_logs',
    sa.Column('alert_id', sa.UUID(), nullable=False),
    sa.Column('delivery_method', sa.String(length=20), nullable=False),
    sa.Column('recipient', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('provider_response', sa.Text(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('delivered_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['alert_id'], ['notification_alerts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('display_name', sa.String(length=200), nullable=True))

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('display_name')

    op.drop_table('notification_delivery_logs')
    with op.batch_alter_table('notification_deliveries', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notification_deliveries_user_id'))
        batch_op.drop_index(batch_op.f('ix_notification_deliveries_trade_id'))
        batch_op.drop_index(batch_op.f('ix_notification_deliveries_alert_rule_id'))

    op.drop_table('notification_deliveries')
    with op.batch_alter_table('portfolio_snapshots', schema=None) as batch_op:
        batch_op.drop_index('idx_snapshots_type')
        batch_op.drop_index('idx_snapshots_portfolio_id')
        batch_op.drop_index('idx_snapshots_date')

    op.drop_table('portfolio_snapshots')
    with op.batch_alter_table('portfolio_performance', schema=None) as batch_op:
        batch_op.drop_index('idx_performance_portfolio_id')
        batch_op.drop_index('idx_performance_portfolio_date')
        batch_op.drop_index('idx_performance_period_type')
        batch_op.drop_index('idx_performance_date')

    op.drop_table('portfolio_performance')
    with op.batch_alter_table('portfolio_holdings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_portfolio_holdings_security_id'))
        batch_op.drop_index(batch_op.f('ix_portfolio_holdings_portfolio_id'))
        batch_op.drop_index('idx_holdings_security_id')
        batch_op.drop_index('idx_holdings_portfolio_id')
        batch_op.drop_index('idx_holdings_first_acquired')
        batch_op.drop_index('idx_holdings_active')

    op.drop_table('portfolio_holdings')
    op.drop_table('notification_alerts')
    with op.batch_alter_table('trade_alert_rules', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_trade_alert_rules_user_id'))
        batch_op.drop_index(batch_op.f('ix_trade_alert_rules_target_symbol'))
        batch_op.drop_index(batch_op.f('ix_trade_alert_rules_target_id'))
        batch_op.drop_index(batch_op.f('ix_trade_alert_rules_is_active'))
        batch_op.drop_index(batch_op.f('ix_trade_alert_rules_alert_type'))

    op.drop_table('trade_alert_rules')
    with op.batch_alter_table('portfolios', schema=None) as batch_op:
        batch_op.drop_index('idx_portfolios_type')
        batch_op.drop_index('idx_portfolios_member_id')
        batch_op.drop_index('idx_portfolios_active')

    op.drop_table('portfolios')
    with op.batch_alter_table('password_reset_tokens', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_password_reset_tokens_user_id'))
        batch_op.drop_index('ix_password_reset_tokens_user_expires')
        batch_op.drop_index('ix_password_reset_tokens_token_hash')

    op.drop_table('password_reset_tokens')
    op.drop_table('notification_subscriptions')
    op.drop_table('newsletter_subscriptions')
    op.drop_table('notification_templates')
    op.drop_table('notification_analytics')
    # ### end Alembic commands ### 