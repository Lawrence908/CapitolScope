# CapitolScope - Homelab Integration
# Port 8120 - chrislawrence.ca/capitolscope

services:
  capitolscope:
    build:
      context: .
      dockerfile: app/Dockerfile
      target: builder
    container_name: capitolscope
    restart: unless-stopped
    networks:
      - web
      - capitolscope-internal
    ports:
      - "8120:8000"
    volumes:
      - ./app/logs:/app/logs
      - ./app/data:/app/data
      - ./static:/app/static
    depends_on:
      capitolscope-redis:
        condition: service_healthy
    env_file:
      - .env
    working_dir: /app/src
    environment:
      - PYTHONPATH=/app/src
      - DEBUG=false
      - ENVIRONMENT=production
    command: python -m uvicorn main:app --host 0.0.0.0 --port 8000
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; import json; response = urllib.request.urlopen('http://localhost:8000/health/'); data = json.loads(response.read().decode()); exit(0 if data.get('data', {}).get('status') == 'healthy' else 1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  capitolscope-redis:
    image: redis:7-alpine
    container_name: capitolscope-redis
    restart: unless-stopped
    networks:
      - capitolscope-internal
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-prodpassword}
    entrypoint: >
      sh -c '
        redis-server --requirepass "$$REDIS_PASSWORD" --maxmemory 256mb --maxmemory-policy allkeys-lru
      '
    volumes:
      - capitolscope_redis_data:/data
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-prodpassword}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  capitolscope-worker:
    build:
      context: .
      dockerfile: app/Dockerfile
      target: builder
    container_name: capitolscope-worker
    restart: unless-stopped
    networks:
      - capitolscope-internal
    volumes:
      - ./app/logs:/app/logs
      - ./data:/app/data
    depends_on:
      capitolscope-redis:
        condition: service_healthy
      capitolscope:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app/src
      - DEBUG=false
      - ENVIRONMENT=production
    command: python -m celery -A background.celery_app worker --loglevel=info --concurrency=1
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    security_opt:
      - no-new-privileges:true

  capitolscope-scheduler:
    build:
      context: .
      dockerfile: app/Dockerfile
      target: builder
    container_name: capitolscope-scheduler
    restart: unless-stopped
    networks:
      - capitolscope-internal
    volumes:
      - ./app/logs:/app/logs
      - ./data:/app/data
    depends_on:
      capitolscope-redis:
        condition: service_healthy
      capitolscope:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app/src
      - DEBUG=false
      - ENVIRONMENT=production
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD:-prodpassword}@capitolscope-redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD:-prodpassword}@capitolscope-redis:6379/0
    command: python -m celery -A background.celery_app beat --loglevel=info
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    security_opt:
      - no-new-privileges:true

networks:
  web:
    external: true
  capitolscope-internal:
    driver: bridge

volumes:
  capitolscope_redis_data:
