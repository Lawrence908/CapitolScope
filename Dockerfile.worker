# Dockerfile for CapitolScope Background Worker Service
# Optimized for Cloud Run deployment

# ----- Builder Stage -----
FROM python:3.12-slim-bookworm AS builder

WORKDIR /build

# Install uv package manager
RUN pip install --no-cache-dir uv

# Copy project files in the structure expected by pyproject.toml
COPY pyproject.toml .
COPY README.md .
COPY app/ app/

# Install dependencies using uv
RUN uv pip install --no-cache-dir --system .

# Install additional dependencies for worker
RUN uv pip install --no-cache-dir --system \
    fastapi \
    uvicorn[standard] \
    redis

# Update apt for any additional packages
RUN apt-get update

# ----- Runtime Stage -----
FROM python:3.12-slim-bookworm

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PORT=8080
ENV PYTHONPATH=/app/src
ENV LOG_DIR=/app/logs

# Create app directory and logs
WORKDIR /app
RUN mkdir -p /app/logs

# Install system dependencies for runtime
RUN apt-get update && \
    apt-get install -y \
        curl \
        ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Copy dependencies and application code from builder
COPY --from=builder /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin
COPY app/src/ /app/src/

# Create non-root user
RUN adduser --disabled-password --gecos '' worker && chown -R worker:worker /app
USER worker

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:$PORT/health || exit 1

# Expose port
EXPOSE $PORT

# Run the worker service
CMD ["python", "-m", "uvicorn", "background.cloud_run_worker:app", "--host", "0.0.0.0", "--port", "8080"]
